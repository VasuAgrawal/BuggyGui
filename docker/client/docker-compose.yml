version: '2'
services:
    # This is effectively the same as running it on the host machine and host
    # network rather than within the docker network. This is so that we can test
    # to ensure that the tcp listening port works via the public interface
    # rather than through the docker channels.
    test_client:
        image: pythonado
        network_mode: "host"
        volumes:
            - "../..:/web_gui:ro"
        entrypoint:
            - "/web_gui/test_client.py"
            - "--key=/web_gui/keys/robot1.key"
            - "--no-gui"
            - "--status"
            - "--buggy-name=Deep Mind (Status)"
    
    test_client_2:
        image: pythonado
        network_mode: "host"
        volumes:
            - "../..:/web_gui:ro"
        entrypoint:
            - "/web_gui/test_client.py"
            - "--key=/web_gui/keys/robot2.key"
            - "--no-gui"
            - "--imu"
            - "--buggy-name=Bender (IMU)"
    
    test_client_3:
        image: pythonado
        network_mode: "host"
        volumes:
            - "../..:/web_gui:ro"
        entrypoint:
            - "/web_gui/test_client.py"
            - "--key=/web_gui/keys/robot3.key"
            - "--no-gui"
            - "--camera"
            - "--buggy-name=Megatron (Camera)"
    
    test_client_4:
        image: pythonado
        network_mode: "host"
        volumes:
            - "../..:/web_gui:ro"
        entrypoint:
            - "/web_gui/test_client.py"
            - "--key=/web_gui/keys/robot4.key"
            - "--no-gui"
            - "--gps"
            - "--buggy-name=Marvin (GPS)"
